	static
	static(静态)修饰的是共享数据
	static的特点：
	
	1，static是一个修饰符，用于修饰成员
	2，被static修饰的成员被所有的对象共享
	3，static优先于对象存在，因为static的成员随着类的加载就已经存在了
	4，static修饰的成员多了一种调用方式，就可以直接被类名调用，类名.成员
	5，static修饰的数据是共享数据，对象中存储的是特有数据
	
	成员和静态变量区别。
	1，两种变量的生命周期不同，
		成员变量随着对象的创建尔存在，随着对象的被回收而被释放。
		静态变量随着类(类什么时候消失?虚拟机结束类就消失,类本身也是个对象 ，加载了
		很多类的时候垃圾回收机制会进行回收)的加载而存在，随着类的消失而消失。
		这是静态的一个小弊端，生命周期太长
	2，调用方式不同
		成员变量只能被对象调用
		静态变量既可以被对象调用也可以被类名调用
	3，别名不同
		成员变量也称为实例变量
		静态变量称为类变量
	4，数据存储位置不同
		成员变量存在堆内存中的对象中，所以也叫对象的特有数据
		静态变量存储在方法区(共享数据区)中的静态区)，所以也叫对象的共享数据。
	
	
	静态使用的注意事项：
	1，静态方法只能访问静态成员。(非静态没有限制)
	2，静态方法中不可以使用this或者super关键字(因为这个时候还没有对象)
	3，主函数是静态的
	
	静态关键字什么时候用？
	1，静态变量
		分析的时候对象中所具备的成员变量的值都是相同的
		这时这个成员就可以被静态修饰
		只要数据在对象中是不同的，就是对象的特有数据，必须存储在对象中，是非
		静态的如果是相同的数据，对象不需要做修改，只要使用即可，不需要存储在
		对象中
		
	
	
	2，静态函数
		看一点，就是该函数功能是否有访问到对象的特有数据
		若需要，该功能就定义成非静态的，如果不需要，就把该功能定义成静态的
		
	静态代码块：
	随着类的加载而执行，而且只执行一次
	
	作用：用于给类进行初始化
	
	构造代码块：可以给所有对象进行初始化的
	
	
	
	
	
	
	
	
	
	
		
		