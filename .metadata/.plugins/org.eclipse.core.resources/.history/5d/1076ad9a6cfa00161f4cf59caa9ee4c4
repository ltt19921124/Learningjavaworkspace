package 集合框架;

import java.util.ArrayList;
import java.util.Collection;

public class CollectionDemo {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Collection coll = new ArrayList();
		Collection c1 = new ArrayList();//
		System.out.println(c1.hashCode());
		System.out.println(coll.hashCode());
//		show(c1,c2);
		
		
	}
	
	public static void show(Collection coll){
		//1,添加元素 add方法 
		coll.add("abc1");
		coll.add("abc2");
		coll.add("abc3");

		//删除元素
//		
//		coll.remove("abc2");//会改变集合的长度的
		//清空集合
//		coll.clear();
		System.out.println(coll.contains("abc3"));//true
//		System.out.println(coll.isEmpty());//true
		
		System.out.println(coll);//[abc1, abc3]，输出集合中所有的元素
		
		
	}
	public static void show(Collection c1,Collection c2){
		c1.add("abc1");
		c1.add("abc2");
		c1.add("abc3");
		
		c2.add("abc2");
		c2.add("abc6");
		c2.add("abc7");
		System.out.println("c1:" + c1);
		System.out.println("c2:" + c2);
		
//		c1.addAll(c2);//将c2中的元素添加到c1中
//		System.out.println("c1:" + c1) ;//
		
		//removeAll
//		boolean b = c1.removeAll(c2);//将相同的元素从调用removeAll的集合中删除
//		System.out.println("removeAll:" + b);
//		System.out.println("c1:" + c1);//
		//containsAll
//		boolean b = c1.containsAll(c2);
//		System.out.println("containAll:" + b);
		//retainsALL
		boolean b = c1.retainAll(c2);
		System.out.println(b);
		System.out.println("c1:" + c1);//保留相同元素在调用方法的那个集合中
		
		
		
	}
	
}



