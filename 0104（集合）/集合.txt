集合类的由来：
		对象用于封装特有数据，对象多了就存储，如果对象个数不确定，
		就使用集合容器进行存储。
		
集合特点：
		1，用于存储对象的容器
		2，集合的长度是可变的
		3，集合不可以存储基本数据类型

集合中有不同的容器，一句不同的需求用不同的容器。共性内容不断向上抽取，形成了集合框架，有一个顶层接口，Collection，容器一般有什么功能呢？存储数据。
		
顶层是Collection接口

常见方法：
1，添加
	boolean add(Object);
	boolean addAll(Collection coll);
	
2，删除
	boolean remove(Object obj);
	boolean removeAll(Collection coll);
	void clear();
3，判断
	boolean contains(Object obj);
	boolean containsAll(Collection coll);
	boolean isEmpty();
4,获取
	int size();
	Iterator iteratot()
	该对象必须依赖具体的容器，因为每一个容器的数据结构都不同，
	所以该迭代器对象时在容器中进行内部实现的。
	对于使用容器者而言，只要通过容器获取到该实现的迭代器的对象即可。
5,其他
	boolean retainAll(Collection coll);//取交集
	Object[] toArray();//将集合转成数组
	
Collection
	|---List:有序（存入取出顺序一致，元素都有索引，元素可以重复）。
	|---Set:元素不能重复。无序。
	
	
List特有的常见方法：有一个共性特点，就是都可以操作下标。

1，添加
	void add(index,element);
	void add(index,collection);
	

2，删除	
	Object remove(index)

3,修改
	object set(index,elements)

4,获取
	object get(index);
	int indexOf(object);
	int lastIndexOf();
	List subList(from,to);s
	
获取。	获取

List 
	|---Vector:是数组数据结构，是同步的
	|---ArrayList：
	|---LinkedList：内部是
	
	
Map:一次添加一对元素，而collection一次添加一个元素，Map也称为双列集合，collection也称为单列集合，Map集合中存储的是键值对。map中必须保证键的唯一性。	
	常用方法：
	1，添加
	key1,v1  key1,v2，这样值会被替换。

	2，删除
	
	